{
  "id": "b9c5f8b8b9e3",
  "title": "B-Trees Are Back: Engineering Fast and Pageable Node Layouts",
  "authors": ["Marcus Muller", "Lawrence Benson", "Viktor Leis"],
  "year": 2023,
  "conference": "SIGMOD",
  "category": "数据库系统",
  "keywords": ["B-Tree", "索引结构", "内存数据库", "存储引擎"],
  "abstract": "Large main memory capacity and even larger data sets have motivated hybrid storage systems, which serve most transactions from memory, but can seamlessly transition to flash storage. In such systems, the data structure of choice is usually a B-Tree with pageable nodes. Most academic B-Tree work considers only fixed size records, making them unsuitable for most practical applications. Given the prevalence of B-Trees, surprisingly few available implementations and benchmarks of optimized B-Trees cover variable-sized records. In this paper, we describe an efficient B-Tree implementation supporting variable-sized records containing six known node layout optimizations. We evaluate each optimization to guide future implementations, and propose an optimized adaptive layout that can even compete with pure in-memory structures for many workloads. Our results show that well-engineered B-Trees can efficiently handle both in-memory and out-of-memory workloads."
}