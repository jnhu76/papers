{
"id": "9a9e5f1a8c1c",
"title": "cache_ext: Customizing the Page Cache with eBPF",
"authors": ["Tal Zussman", "Andrew Cheng", "Ioannis Zarkadas", "Jeremy Carin", "Hubertus Franke", "Jonas Pfefferle", "Asaf Cidon"],
"year": 2025,
"conference": "SOSP '25",
"category": "操作系统",
"keywords": ["操作系统", "eBPF", "页缓存", "缓存策略", "内存管理", "Linux内核", "驱逐算法"],
"abstract": "The OS page cache is central to the performance of many applications, by reducing excessive accesses to storage. However, its one-size-fits-all eviction policy performs poorly in many workloads. While the systems community has experimented with a plethora of new and adaptive eviction policies in non-OS settings (e.g., key-value stores, CDNs), it is very difficult to implement such policies in the page cache, due to the complexity of modifying kernel code. To address these shortcomings, we design a flexible eBPF-based framework for the Linux page cache, called cache_ext, that allows developers to customize the page cache without modifying the kernel. cache_ext enables applications to customize the page cache policy for their specific needs, while also ensuring that different applications' policies do not interfere with each other and preserving the page cache's ability to share memory across different processes. We demonstrate the flexibility of cache_ext's interface by using it to implement eight different policies, including sophisticated eviction algorithms. Our evaluation shows that it is indeed beneficial for applications to customize the page cache to match their workloads' unique properties, and that they can achieve up to 70% higher throughput and 58% lower tail latency."
}