{
  "id": "b4a1c8b4a1c8",
  "title": "How to Copy Memory? Coordinated Asynchronous Copy as a First-Class OS Service",
  "authors": ["Jingkai He", "Yunpeng Dong", "Dong Du", "Mo Zou", "Zhitai Yu", "Yuxin Ren", "Ning Jia", "Yubin Xia", "Haibo Chen"],
  "year": 2025,
  "conference": "SOSP",
  "category": "操作系统",
  "keywords": ["内存复制", "异步复制", "操作系统服务", "操作系统", "内存管理", "性能优化", "硬件加速"],
  "abstract": "In modern systems, memory copy remains a critical performance bottleneck across various scenarios, playing a pervasive role in system-wide execution such as syscalls, IPC, and user-mode applications. Numerous efforts have aimed at optimizing copy performance, including zero-copy with page remapping and hardware-accelerated copy. However, they typically target specific use cases, such as Linux zero-copy send() for messages of ≥10KB. This paper argues for copy as a first-class OS service, offering three key benefits: (1) with the asynchronous copy abstraction provided by the service, applications can overlap their execution with copy; (2) the service can effectively utilize hardware capabilities to enhance copy performance; (3) the service's global view of copies further enables holistic optimization. To this end, we introduce Copier, a new OS service of coordinated asynchronous copy, to serve both user-mode applications and OS services. We build Copier-Linux to demonstrate Copier's ability to improve performance for diverse use cases, including Redis, Protobuf, network stack, proxy, etc. Evaluations show that Copier achieves up to a 1.8× speedup for real-world applications like Redis and a 1.6× improvement over zIO, the state-of-the-art in optimizing copy efficiency. To further facilitate adoption, we develop a toolchain to ease the use of Copier. We also integrate Copier into a commercial smartphone OS (HarmonyOS 5.0), achieving promising results."
}