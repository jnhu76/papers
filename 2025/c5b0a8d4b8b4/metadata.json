{
  "id": "c5b0a8d4b8b4",
  "title": "CORTENMM: Efficient Memory Management with Strong Correctness Guarantees",
  "authors": ["Junyang Zhang", "Xiangcan Xu", "Yonghao Zou", "Zhe Tang", "Xinyi Wan", "Kang Hu", "Siyuan Wang", "Wenbo Xu", "Di Wang", "Hao Chen", "Lin Huang", "Shoumeng Yan", "Yuval Tamir", "Yingwei Luo", "Xiaolin Wang", "Huashan Yu", "Zhenlin Wang", "Hongliang Tian", "Diyu Zhou"],
  "year": 2025,
  "conference": "SOSP",
  "category": "操作系统",
  "keywords": ["Memory Management", "Virtual Memory", "Concurrency", "Formal Verification", "Scalability"],
  "abstract": "Modern memory management systems suffer from poor performance and subtle concurrency bugs, slowing down applications while introducing security vulnerabilities. We observe that both issues stem from the conventional design of memory management systems with two levels of abstraction: a software-level abstraction (e.g., VMA trees in Linux) and a hardware-level abstraction (typically, page tables). This design increases portability but requires correctly and efficiently synchronizing two drastically different and complex data structures, which is generally challenging.\nWe present CORTENMM, a memory management system with a clean-slate design to achieve both high performance and synchronization correctness. Our key insight is that most OSes no longer need the software-level abstraction, since mainstream ISAs use nearly identical hardware MMU formats. Therefore, departing from prior designs, CORTENMM eliminates the software-level abstraction to achieve sweeping simplicity. Exploiting this simplicity, CORTENMM proposes a transactional interface with scalable locking protocols to program the MMU, achieving high performance by avoiding the extra contention in the software-level abstraction. The one-level design further enables us to formally verify the correctness of concurrent code operating on the MMU (correctness of basic operations and locking protocols), thereby offering strong correctness guarantees. Our evaluation shows that the formally verified CORTENMM outperforms Linux by 1.2\\(\\times\\) to 26\\(\\times\\) on real-world applications."
}